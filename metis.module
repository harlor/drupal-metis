<?php

/**
 * @file
 * Primary module hooks for Metis module.
 */

/**
 * Implements hook_theme().
 */
function metis_theme() {
  return [
    'metis_codes' => [
      'variables' => [
        'code_public' => NULL,
        'code_private' => NULL,
        'server' => NULL,
        'show' => NULL,
      ],
    ],
    'metis_code_public' => [
      'variables' => [
        'code_public' => NULL,
        'code_private' => NULL,
        'server' => NULL,
        'show' => NULL,
      ],
    ],
    'metis_code_private' => [
      'variables' => [
        'code_public' => NULL,
        'code_private' => NULL,
        'server' => NULL,
        'show' => NULL,
      ],
    ],
    'metis_show' => [
      'variables' => [
        'code_public' => NULL,
        'code_private' => NULL,
        'server' => NULL,
        'show' => NULL,
      ],
    ],
  ];
}

/**
 * Prepares variables for metis_codes template.
 *
 * Default template: metis_codes.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - foo: Foo variable description.
 */
function template_preprocess_metis_codes(array &$variables) {
  $variables['foo'] = 'bar';
}

/**
 * Prepares variables for metis_code_public template.
 *
 * Default template: metis_code_public.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - foo: Foo variable description.
 */
function template_preprocess_metis_code_public(array &$variables) {
  $variables['foo'] = 'bar';
}

/**
 * Prepares variables for metis_code_private template.
 *
 * Default template: metis_code_private.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - foo: Foo variable description.
 */
function template_preprocess_metis_code_private(array &$variables) {
  $variables['foo'] = 'bar';
}

/**
 * Prepares variables for metis_show template.
 *
 * Default template: metis_show.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - foo: Foo variable description.
 */
function template_preprocess_metis_show(array &$variables) {
  $variables['foo'] = 'bar';
}

// @todo remove this dummy.
function metis_count_unused() {
  $connection = \Drupal::database();
  $query = $connection->select('metis', 'm');
  $query
    ->condition('m.used', 0, '=')
    ->addField('m', 'code_public');

  $count_query = $query->countQuery();
  $num_rows = $count_query->countQuery()->execute()->fetchField();

  return $num_rows;
}
